apply plugin: 'maven'
apply plugin: 'signing'

def DEBUG = false
def GROUP = groupPackage
def ARTIFACT = libraryName


private String getLibVersion(def libraryVersion) {
    def versionName = libraryVersion
    def gitVersion = 'git rev-parse --short HEAD'.execute().text.trim()
    def tempV
    if (isSnapshot == true) {
        tempV = "$versionName-$gitVersion-SNAPSHOT"
    } else {
        tempV = "$versionName"
    }
    print " version= $tempV "
    return tempV
}


def VERSION = getLibVersion(libraryVersion)


Properties properties = new Properties()
if (project.rootProject.file('local.properties').exists()) {
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
}

static def isVersionSnapshot(def version) {
    return version.endsWith("SNAPSHOT")
}

uploadArchives {
    repositories {
        mavenDeployer {

//            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            if (DEBUG) {
                repository(url: uri("${buildDir}/libs"))
            } else {
                if (isVersionSnapshot(VERSION)) {
                    repository(url: uri(properties.getProperty('MAVEN_SNAPSHOT_REPO'))) {
                        authentication(
                                userName: properties.getProperty('MAVEN_USER_NAME'),
                                password: properties.getProperty('MAVEN_PASSWORD')
                        )
                    }
                } else {
                    repository(url: uri(properties.getProperty('MAVEN_RELEASE_REPO'))) {
                        authentication(
                                userName: properties.getProperty('MAVEN_USER_NAME'),
                                password: properties.getProperty('MAVEN_PASSWORD')
                        )
                    }
                }
            }
            pom {
                groupId = GROUP
                artifactId = ARTIFACT
                version = VERSION
                project {
                    name = libraryName
                    packaging = "aar"
                    description = libraryDescription
                    url = gitUrl

                    scm {
                        connection siteUrl
                        developerConnection siteUrl
                        url siteUrl
                    }

                    licenses {
                        license {
                            name "Apache-2.0 License"
                            url "https://github.com/maoqis/McImage/blob/master/LICENSE"
                            distribution "A permissive license whose main conditions require preservation of copyright and license notices. Contributors provide an express grant of patent rights. Licensed works, modifications, and larger works may be distributed under different terms and without source code."
                        }
                    }
                    developers {
                        developer {
                            id "maoqis"
                            name "maoqisheng"
                        }
                    }
                }
            }
        }
    }
}

afterEvaluate { project ->
    if (project.getPlugins().hasPlugin('com.android.application') ||
            project.getPlugins().hasPlugin('com.android.library')) {
        task androidSourcesJar(type: Jar) {
            classifier = 'sources'
            from android.sourceSets.main.java.source
        }
        artifacts {
            archives androidSourcesJar
        }
    } else {
        task javadocJar(type: Jar) {
            classifier = 'javadoc'
            from javadoc
        }
        task sourcesJar(type: Jar) {
            classifier = 'sources'
            from sourceSets.main.allSource
        }
        artifacts {
            archives javadocJar, sourcesJar
        }
    }
}

//signing {
//    sign configurations.archives
//}
